fontawesome::fa()
fontawesome::fa("internet")
fontawesome::fa("house")
fontawesome::fa("presentation-screen", "#aa091d")
fontawesome::fa("presentation", "#aa091d")
fontawesome::fa_metadata()
reticulate::repl_python()
list.files(pattern = "wide_mnb")
list.files(pattern = "wide_mnb", recursive = TRUE)
#| echo: false
#| results: asis
list.files(pattern = "wide_mnb", recursive = TRUE) |>
stringr::str_c("![](", `...` = _, "){.absolute top=425 left=1100 width="300"}") |>
list.files(pattern = "wide_mnb", recursive = TRUE)
list.files(pattern = "wide_mnb", recursive = TRUE) |>
stringr::str_c("![](", `...` = _, "){.absolute top=425 left=1100 width="300"}")
#| echo: false
#| results: asis
list.files(pattern = "wide_mnb", recursive = TRUE) |>
str_c("![](", `...` = _, '){.absolute top=425 left=1100 width="300"}') |>
cat()
#| echo: false
#| results: asis
list.files(pattern = "wide_mnb", recursive = TRUE) |>
paste0("![](", `...` = _, '){.absolute top=425 left=1100 width="300"}') |>
cat()
emo::ji("thumb")
list.files(pattern = "wide_mnb", recursive = TRUE)
list.files(pattern = "wide_mnb", recursive = TRUE) |>
paste0("[Marcell Granát]{.bold} | Education & Research Expert at ![](", `...` = _, '){width="300"}')
library(httr)
# API endpoint for survey data retrieval
api_endpoint <- "https://api.starlpoll.com/data"
survey_id <- "wby5Ae91dyA"
# API endpoint for survey data retrieval
api_endpoint <- "https://api.starlpoll.com/data"
# Construct API request URL
api_url <- paste0(api_endpoint, "?survey_id=", survey_id)
# Set API headers
headers <- c("Authorization" = "33f35a8e-1761-11ee-96fb-dd98527c61c9")
# Send API request and handle response
response <- GET(url = api_url, headers = headers)
response
library(httr)
# API endpoint URL
api_url <- "https://api.strawpoll.com/v3/polls/wby5Ae91dyA"
# Set headers
headers <- c("Accept" = "application/json",
"X-API-Key" = "33f35a8e-1761-11ee-96fb-dd98527c61c9")
# Send GET request
response <- GET(url = api_url, headers = headers)
# Extract and print response content
if (status_code(response) == 200) {
poll_data <- content(response, "parsed")
print(poll_data)
} else {
message("Error retrieving poll data. Please check your API key and URL.")
}
poll_data <- content(response, "parsed")
poll_data
poll_data$title
poll_data$group
poll_data$cached_at
poll_data$created_at
poll_data$poll_options
poll_data |>
pull(poll_options) |>
map(~ tibble(.$value, .$vote_count))
poll_data |>
dplyr::pull(poll_options) |>
purrr::map(~ tibble(.$value, .$vote_count))
poll_data
poll_data |>
dplyr::puck(poll_options) |>
purrr::map(~ tibble(.$value, .$vote_count))
poll_data |>
dplyr::pluck(poll_options) |>
purrr::map(~ tibble(.$value, .$vote_count))
poll_data |>
purrr::pluck(poll_options) |>
purrr::map(~ tibble(.$value, .$vote_count))
poll_data
poll_data |>
purrr::pluck("poll_options") |>
purrr::map(~ tibble(.$value, .$vote_count))
poll_data |>
purrr::pluck("poll_options") |>
purrr::map(~ tibble::tibble(.$value, .$vote_count))
poll_data |>
purrr::pluck("poll_options") |>
purrr::map_df(~ tibble::tibble(.$value, .$vote_count))
poll_data |>
purrr::pluck("poll_options") |>
purrr::map_df(~ tibble::tibble(name = .$value, value = .$vote_count))
list.files(recursive = TRUE, full.names = TRUE, pattern = "template_fns.R$") |>
source()
list.files(recursive = TRUE, full.names = TRUE, pattern = "template_fns.R$") |>
source()
list.files(recursive = TRUE, full.names = TRUE, pattern = "template_fns.R$")
list.files(recursive = TRUE, full.names = TRUE, pattern = "template_fns.R$") |>
source()
library(tidyverse)
list.files(recursive = TRUE, full.names = TRUE, pattern = "template_fns.R$") |>
source()
#| echo: false
#| results: asis
list.files(pattern = "wide_mnb", recursive = TRUE) |>
paste0(
c("[Marcell Granát]{.bold}",
'<p style="color: grey;"> | Education & Research Expert at </p>"',
'![]', `...` = _, '-){width="300"}')
) |>
cat()
list.files(pattern = "wide_mnb", recursive = TRUE)
#| echo: false
#| results: asis
list.files(pattern = "wide_mnb", recursive = TRUE) |>
paste0(
'![]', `...` = _, '){width="300"}'
) |>
cat()
list.files(pattern = "wide_mnb", recursive = TRUE) |>
paste0(
'![]', `...` = _, '){width="300"}'
) |>
cat()
cars
ggplot(cars) +
geom_point(speed, dist)
cars |>
head()
cars
#| label: fig_cars
#| cap: These are cars
#| comment: this is subcap
ggplot(cars) +
geom_point(aes(speed, dist, fill = speed > 10)) -
geom_line(aes(speed, dist)) -
.gg_finalise
#| label: fig_cars
#| cap: These are cars
#| comment: this is subcap
ggplot(cars) +
geom_point(aes(speed, dist, fill = speed > 10)) -
# geom_line(aes(speed, dist)) -
.gg_finalise
#| label: fig_cars
#| cap: These are cars
#| comment: this is subcap
ggplot(cars) +
geom_point(aes(speed, dist, fill = speed > 10)) +
geom_line(aes(speed, dist)) -
.gg_finalise
library(tidyverse)
list.files(recursive = TRUE, full.names = TRUE, pattern = "template_fns.R$") |>
source()
cars |>
head() |>
gt() |>
.gt_finalise()
knitr::include_graphics("https://doc-08-6c-docs.googleusercontent.com/docs/securesc/l5djutmk5gvdk5kgjgpsjjacshk11cj8/phk5g4i4m0ua1p5opa3np2gnipkc6th3/1688162025000/09393443717531685164/09393443717531685164/17VtYW_jKtkzPTG1TKQCoZ7WDnwUn53dX?e=download&ax=AGtFMPXPlN3NhoTy1Jx5qtO474Xulk8lpJNFflMlciiIu15rvrA4b6V9BUMVU9e7UZEvfMA_c16FM1evWxnMn3e0A7Z3fSyDBhT8h0ixBdVRb0Jx_OUyTIkFtUX6ezU2-1wH8C4NVIo4gO20-Cm9gXr4T8cTdxCBnLYlrepRalOIrinOOdvtrYaPRj9u76okIFwrIjHn7Q39nG3SYVm9PzeK9qNde6lFvw0sN-_xEoEGYM4kwvLB4MfbcDkDV_CbfpR3WUamXq__rcSQe316jAgLpJWBQUWqNep8mYk6xvHkXQWgciIWMWCR7BCTF7t1CtZ48ObveNXrP4W_5AacWP3-W4V_UdiBqFSRQVV5GhoYA9es9dlTpZ3DGOVqH8I17DutGzzVeF_wRSq-baOrnyZD4QcpnDidxpRj4KF9Vi6mQNjvFeW9hbada1ijhYfYF0rNoeNaoZrhbe18qmKB0nUCUH1eqCNDIc12TzDWC5qj2010ST6M0XjlpO0Ka14tt7Nk8HxlSHeKCNF8cDBPeXFPG6kH_Fh3Ne_tl6jFRjMBGn-2DqVV9K8gVi1LCyfLbbf4Wpp9ojAJIYlIbL1hliAIyWoxLUk_c64ilJ9xBHnD03lRQ__63WKRHuQnLYtSQyw9jfNahjxEcL6ujCQeyrZgk02JnGVY9xgl5U67yA5QxDAQXmXebxZWhYwfR9wN7jjTFGW6lq15JTTdynwvH5_dpq57ufot6mSD8hK3lMO3KRjEFf2yd4DeRrJgn2YoXteD_n7DxWpzD_cwENRww8Ur-5xOhrwJ2SGtWEpKIr2EwqAt2pLEFZQkYBG8n23garDveG8iPtxFacmXUhLzWWmFDZkIrN8zO-yTqY2m7vY0BNzH8DizPzp6lRExDgemEeXKxQ&uuid=fd0a75f1-3db3-4ea1-a8ff-77422103e374&authuser=0&nonce=2lptciboft55q&user=09393443717531685164&hash=ub8mj8cnp40bdngg6nrnuc2vcsat0n3n")
knitr::include_graphics("https://drive.google.com/uc?id=1Ce3mki2NT95ItChtNZayhlfj49zFxHzB")
knitr::include_url("https://drive.google.com/uc?id=1Ce3mki2NT95ItChtNZayhlfj49zFxHzB")
cat(knitr::include_url("https://drive.google.com/uc?id=1Ce3mki2NT95ItChtNZayhlfj49zFxHzB"))
print(knitr::include_url("https://drive.google.com/uc?id=1Ce3mki2NT95ItChtNZayhlfj49zFxHzB"))
iris |>
head() |>
gt() |>
.gt_finalise()
emo::ji("thumb")
emo::ji("pray")
emo::ji("waving")
emo::ji("wave")
fontawesome::fa("wave", "#aa091d")
fontawesome::fa("mail", "#aa091d")
emo::ji("mail")
emo::ji("email")
fontawesome::fa("linkedin", "#aa091d")
fontawesome::fa("linkedin", "grey")
emo::ji("thumb-up")
emo::ji("thumbup")
emo::ji("thumbs-up")
emo::ji("thumb")
emo::ji("thumbup")
emo::ji("thumb-up")
emo::ji("upthumb")
emo::ji("up-thumb")
emo::ji_find("thumb")
emo::ji("+1")
